import React, { useState, useContext } from 'react';
import Head from 'next/head';
import Link from 'next/link';
import { getAuth, signInWithEmailAndPassword } from 'firebase/auth'
import RecipeContext from '../context/recipeContext';
import {
  ChevronLeft,
  ChevronRight,
  Lock,
  Mail,
  Visibility,
  VisibilityOff,
} from '@mui/icons-material';
import { useRouter } from 'next/router';
import { toast } from 'react-toastify';

const SignIn = () => {
  const [ formData, setFormData ] = useState({
    email: '',
    password: '',
  })

  const { email, password } = formData
  const [visible, setVisible] = useState(false);
  const router = useRouter()
  const recipeContext = useContext(RecipeContext)

  const { dispatch } = recipeContext

  const onChange = (e) => {
    setFormData((prevState) => ({
      ...prevState,
      [e.target.id] : e.target.value
    }))
  }

  const showPassword = () => {
    setVisible(!visible);
  };

  const onSubmit = async (e) => {
    e.preventDefault()

    try {
      const auth = getAuth()
      
      const userCred = await signInWithEmailAndPassword(auth, email, password)
      
      const user = userCred.user
      
      if(user){
        console.log('submitted')
        dispatch({type: 'LOGIN_USER', payload: user})
        router.push('/')
      }

    } catch (err) {
      console.log(err)
      toast.error('Wrong User Credentials')
    }
  }
  return (
    <div className="landing-img h-screen w-screen font-new">
      <Head>
        <meta
          name="description"
          content="A recipe app called CookIT Generated by create next app"
        />
        <link rel="icon" href="/favicon.ico" />
        <title>Login | Sign in to CookIT</title>
      </Head>
      <div className="flex p-5 text-gray-800">
        <div className="md:w-[400px]"></div>
        <div className="w-full md:ml-40 lg:ml-60 flex-grow">
          <header className="p-3">
            <h2 className="font-extrabold text-3xl">Welcome Back</h2>
          </header>

          <main className="mt-3 p-2">
            <form onSubmit={onSubmit}>
              <div className="w-full flex gap-2 px-2 items-center md:w-[500px] bg-white rounded-lg shadow-lg hover:shadow-none border-2 border-gray-200 mb-6">
                <Mail fontSize="small" />
                <input
                  type="email"
                  className="flex-grow focus:outline-none text-sm border-none py-2"
                  placeholder="Enter a valid email..."
                  id='email'
                  value={email}
                  onChange={onChange}
                  required
                />
              </div>

              <div className="w-full flex gap-2 px-2 items-center md:w-[500px] bg-white rounded-lg shadow-lg hover:shadow-none border-2 border-gray-200 mb-3">
                <Lock fontSize="small" />
                <input
                  type={`${visible ? 'text' : 'password'}`}
                  className="flex-grow focus:outline-none text-sm border-none py-2"
                  placeholder="Enter your password..."
                  id='password'
                  value={password}
                  onChange={onChange}
                  required
                />

                {visible ? (
                  <Visibility fontSize="small" onClick={showPassword} />
                ) : (
                  <VisibilityOff fontSize="small" onClick={showPassword} />
                )}
              </div>

              <div className="w-full flex justify-end gap-2 px-2 items-center md:w-[500px]">
                <Link href="/forgot-password">
                  <a className="text-red-500">forgot password?</a>
                </Link>
              </div>

              <div className="flex justify-between items-center w-full md:w-[500px] mt-9">
                <h3 className="text-2xl font-black">Sign In</h3>
                <button
                  type="submit"
                  className="p-2 rounded-full bg-red-500 border-none shadow-lg hover:shadow-none"
                >
                  <ChevronRight className="text-white" />
                </button>
              </div>
            </form>

            {/* google oauth */}

            <div className="flex items-center gap-2 w-full md:w-[500px] mt-9">
              <Link
                href="/"
              >
                <a className="bg-red-500 p-1 rounded-full shadow-lg hover:shadow-none">
                  <ChevronLeft className="text-white" />
                </a>
              </Link>
              <p className="text-gray-800 text-sm font-bold">Back home</p>
            </div>

            <div className="flex justify-center items-center w-full md:w-[500px] mt-9">
              <Link href="/sign-up" className="mb-3">
                <a className="text-red-500 font-bold">Sign up instead</a>
              </Link>
            </div>
          </main>
        </div>
      </div>
    </div>
  );
};

export default SignIn;
